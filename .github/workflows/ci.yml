name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  psalm:
    name: Psalm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Psalm
        uses: docker://vimeo/psalm-github-actions
        with:
          security_analysis: true
          report_file: results.sarif
      - name: Upload Security Analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif
  phpstan:
    name: PHPStan

    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: ['7.4', '8.1', '8.2']
    steps:
      - uses: actions/checkout@v2
      - uses: php-actions/composer@v5
        with:
          php_version: ${{ matrix.php-versions }}

      - name: PHPStan Static Analysis
        uses: php-actions/phpstan@v3
        with:
          path: src/
          php_version: ${{ matrix.php-versions }}

  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ['7.4', '8.1', '8.2']
        dependencies:
          - "lowest"
          - "highest"
          - "locked"
        exclude:
          - php-version: '7.4'
            dependencies: 'highest'

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "pcov"
          php-version: "${{ matrix.php-version }}"
          ini-values: memory_limit=-1
          tools: composer:v2, cs2pr

      - name: "Cache dependencies"
        uses: "actions/cache@v3"
        with:
          path: |
            ~/.composer/cache
            vendor
          key: "php-${{ matrix.php-version }}-${{ matrix.dependencies }}"
          restore-keys: "php-${{ matrix.php-version }}-${{ matrix.dependencies }}"

      - name: "Install lowest dependencies"
        if: ${{ matrix.dependencies == 'lowest' }}
        run: "composer update --prefer-lowest --no-interaction --no-progress --no-suggest --ignore-platform-req=php"

      - name: "Install highest dependencies"
        if: ${{ matrix.dependencies == 'highest' }}
        run: "composer update --no-interaction --no-progress --no-suggest --ignore-platform-req=php"

      - name: "Install locked dependencies"
        if: ${{ matrix.dependencies == 'locked' }}
        run: "composer install --no-interaction --no-progress --no-suggest --ignore-platform-req=php"

      - name: "Tests"
        run: "vendor/bin/phpunit"
